let EventData = Event
| extend RenderedDescription = tostring(split(RenderedDescription, ":")[0])
| project TimeGenerated,
    Source,
    EventID,
    Computer,
    UserName,
    EventData,
    RenderedDescription
| extend EvData = parse_xml(EventData)
| extend EventDetail = EvData.DataItem.EventData.Data;
let KERNEL_EVENT_16=() {
let processEvents = EventData
| where Source == "Microsoft-Windows-Kernel-General"
| where EventID == 16
| extend HiveNameLength = EventDetail[0]["#text"]
| extend HiveName = EventDetail[1]["#text"]
| extend KeysUpdated = EventDetail[2]["#text"]
| extend DirtyPages = EventDetail[3]["#text"]
| project-away EventData,EvData,EventDetail;
processEvents;
};
let EVENT_LOG_CLEARED_104=() {
let processEvents = EventData
| where Source == "Microsoft-Windows-Eventlog"
| where EventID == 104
| extend Channel=EvData.DataItem.UserData.LogFileCleared["Channel"]
| project-away EventData,EvData,EventDetail;
processEvents;
};
(union isfuzzy=true
KERNEL_EVENT_16,
EVENT_LOG_CLEARED_104
)
| project TimeGenerated,
Source,
EventID,
Computer,
UserName,
Channel,
HiveNameLength,
HiveName,
KeysUpdated,
DirtyPages